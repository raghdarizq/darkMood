import { useState } from "react";
import "./App.css";
import "./Theam.css";

function App() {
  const [change, setChange] = useState("peraon");
  const [Theme, setTheme] = useState("");

  const changeName = () => {
    setChange("Raghda N. Abu Rizq");
  };
  return (
    <div className={`App ${Theme}`}>
      <button
        onClick={() => {
          setTheme(Theme == "" ? "Dark" : "");
        }}
      >
        Toggle Theam
      </button>
      <div
        className="btn-container"
        onChange={() => {
          setTheme(Theme == "" ? "Dark" : "");
        }}
      >
        <label className="switch btn-color-mode-switch">
          <input
            type="checkbox"
            name="color_mode"
            id="color_mode"
            defaultValue={1}
          />
          <label
            htmlFor="color_mode"
            data-on="Dark"
            data-off="Light"
            className="btn-color-mode-switch-inner"
          />
        </label>
      </div>
      <div className={`divbuttons`}>
        <button
          onClick={() => {
            setTheme("");
          }}
        >
          Light
        </button>
        <button
          onClick={() => {
            setTheme("Dark");
          }}
        >
          Dark
        </button>
        <button
          onClick={() => {
            setTheme("Grey");
          }}
        >
          Grey
        </button>
        <button
          onClick={() => {
            setTheme("pink");
          }}
        >
          pink
        </button>
      </div>
      <h1>The Name is {change}</h1>
      <button onClick={changeName}>changeName</button>
      <h1>{Theme}</h1>
    </div>
  );
}

export default App;
//////////////////////////////////////////////////////////

//////
import { useReducer } from "react";
const initial_value = {
  name: "Raghda N. Abu Rizq",
  age: "20",
  sp: "wepdevloper",
};
const reducer = (state, action) => {
  switch (action.type) {
    case "CHANGE_NAME":
      return { ...state, name: action.newValue };
    case "CHANGE_AGE":
      return { ...state, age: action.newValue };
    case "CHANGE_SP":
      return { ...state, sp: action.newValue };
    default:
      return state;
  }
};

function App() {
  const [staticName, dispatch] = useReducer(reducer, initial_value);

  return (
    <div>
      <h1>useReducer</h1>
      <h2>
        <mark>{staticName.name}</mark>
      </h2>
      <h3>
        <mark>{staticName.age}</mark>
      </h3>
      <h4>
        <mark>{staticName.sp}</mark>
      </h4>
      <button
        onClick={() => {
          dispatch({
            type: "CHANGE_NAME",
            newValue: "Leena N. Abu Rizq",
          });
        }}
      >
        change name
      </button>
      <button
        onClick={() => {
          dispatch({
            type: "CHANGE_AGE",
            newValue: "19",
          });
        }}
      >
        change Age
      </button>
      <button
        onClick={() => {
          dispatch({ type: "CHANGE_SP", newValue: "JGraphic designer" });
        }}
      >
        change Sp
      </button>
    </div>
  );
}

export default App;

//////////////////////////////
import { useReducer } from "react";
import "./App.css";
import "./Theam.css";
import { Link } from "react-router-dom";
const Ftheam = { Color: "Light", name: "Raghda N. Abu Rizq" };

const reducer = (state, action) => {
  switch (action.type) {
    case "MAKE_DARK":
      return { ...state, Color: action.NewValue };
    case "MAKE_LIGHT":
      return { ...state, Color: action.NewValue };
    case "MAKE_GREY":
      return { ...state, Color: action.NewValue };
    case "MAKE_PINK":
      return { ...state, Color: action.NewValue };
    case "TOGGLE_THEAM":
      return { ...state, Color: action.NewValue };
    case "CHANGE_Name":
      return { ...state, name: action.NewValue };
    default:
      return state;
  }
};
function App() {
  const [Theam, dispatch] = useReducer(reducer, Ftheam);
  return (
    <div className={`App ${Theam.Color}`}>
      <Link to="/Page2">pag2</Link>
      <button
        onClick={() => {
          dispatch({
            type: "TOGGLE_THEAM",
            NewValue: Theam.Color === "Dark" ? "Light" : "Dark",
          });
        }}
      >
        Toggle Theam
      </button>
      <div className="btn-container">
        <label className="switch btn-color-mode-switch">
          <input
            type="checkbox"
            name="color_mode"
            id="color_mode"
            defaultValue={1}
          />
          <label
            htmlFor="color_mode"
            data-on="Dark"
            data-off="Light"
            className="btn-color-mode-switch-inner"
          />
        </label>
      </div>
      <div className={`divbuttons`}>
        <button
          onClick={() => {
            dispatch({ type: "MAKE_LIGHT", NewValue: "Light" });
          }}
        >
          Light
        </button>
        <button
          onClick={() => {
            dispatch({ type: "MAKE_DARK", NewValue: "Dark" });
          }}
        >
          Dark
        </button>
        <button
          onClick={() => {
            dispatch({ type: "MAKE_GREY", NewValue: "Grey" });
          }}
        >
          Grey
        </button>
        <button
          onClick={() => {
            dispatch({ type: "MAKE_PINK", NewValue: "pink" });
          }}
        >
          pink
        </button>
      </div>
      <h2>The Name :{Theam.name}</h2>
      <button
        onClick={() => {
          dispatch({ type: "CHANGE_Name", NewValue: "Leena N. Abu Rizq" });
        }}
      >
        Change Name
      </button>
      <h2>The Age : 20</h2>
    </div>
  );
}

export default App;
/////////////////
import { useContext } from "react";
import { Link } from "react-router-dom";
import ThemeContexttt from "./context/DataContext";

const App = () => {
  // const [Theam, dispatch] = useReducer(reducer, Ftheam);
  const {Name,ChangeName} = useContext(ThemeContexttt);

  return (
    <div>
      <Link to={"/page2"}>go to page</Link>
    <h2>The Name : {Name} </h2>
    <button
      onClick={() => {
        ChangeName();
      }}
    >
      Change Name
    </button>
  </div>
  );
};

export default App;
